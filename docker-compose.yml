version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_pass
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6378:6379"

  backend:
    build: ./service
    container_name: EC-SERVICE
    command: sh /app/entrypoint.sh
    ports:
      - "8000:8000"
    env_file:
      - ./service/.env
    environment:
      DJANGO_ROLE: backend
      DJANGO_SUPERUSER_EMAIL: admin@example.com
      DJANGO_SUPERUSER_PASSWORD: admin123
    depends_on:
      - postgres
      - redis

  frontend:
    build: ./ui
    container_name: EC-UI
    ports:
      - "3000:80"
    depends_on:
      - backend

  worker:
    build: ./service
    command: celery -A service worker -l info
    volumes:
      - ./service:/app
    depends_on:
      - redis
      - backend

  beat:
    build: ./service
    command: >
      sh -c "sleep 10 && celery -A service beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./service:/app
    depends_on:
      - redis
      - backend
    restart: on-failure

volumes:
  postgres_data:
